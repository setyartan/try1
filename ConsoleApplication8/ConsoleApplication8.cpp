// ConsoleApplication8.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>

int main()
{
  //Вариант 6. Вычислить 5 значений суммы элементов 
 //последовательности an = 2, 5 * n ^ 2 + 5, 3 (для n от 4 с шагом 1).
//Результат разместить в памяти в целом формате.
	//int	n = 3;
	//double   res[5];
	//float	ALPHA = 2.5, BETA=5.3;
	//float sum = 0;

	//_asm
	//{; начало ассемблерной вставк
	//	lea EBX, res;
	//	mov ECX, 5;
	//m1 :
	//	finit; очистка регистров FPU
	//		inc	n; наращивание аргумента
	//		fld	ALPHA; загрузка  в стек FPU
	//		fimul	n; 2.5 * n
	//		fimul	n; 2.5 * ^2
	//		fld BETA; загрузка  в стек FPU
	//		fadd; добавления 2 значения в стеке
	//		fst qword ptr[EBX]; заись результата
	//		add EBX, 8; переход в другую ячейку памяти
	//		fld sum; загрузка  в стек FPU
	//		fadd; накопление суммы последовательности
	//		fst sum; запись из стека 
	//loop	m1; 
	//} 				// окончание ассемблерной вставки
	//for (int i = 0; i < 5; i++) {
	//	std::cout << res[i] << " ";
	//}
	/*Вариант 4. Найти целое значение аргумента х,
		при котором функция Y = 15 / (x ^ 2 + 3, 7)
		станет меньше 0, 1 (для х от 1 с шагом 1).*/

		//int N = 0;
		//int	 A = 15;			// описание операндов в памяти
		//double	 B = 3.7, C=0.1;
		//float Y = 0;

		//_asm
		//{; начало ассемблерной вставки
		//	m1 : 
		//
		//finit; очистка регистров FPU
		//	inc	N; наращивание
		//	fild N;  загрузка в тек фпу
		//	fimul N; умножения стека
		//	fld B; загрузка с стек фпу
		//	fadd; добавления значений в стеке
		//	fild A; загрузка в стек фпу
		//	fdiv ST(0), ST(1); деление значений в стеке
		//	
		//	fcom C					; сравнение суммы с 0.1
		//	fst Y
		//	fstsw	AX				; сохранение копии регистра состояния SW в регистре AX(CPU)
		//	sahf					; сохранение старшего байта АХ в EFLAGS
		//	ja	m1						; переход, если сумма больше 0,1
		//}				// окончание ассемблерной вставки
		//std::cout << Y << " " << N;

		//Вариант 6. Y = 5 * arcSin(3 * cos 60° * sin 25°).
		//Y = 2 * arcSin((A ^ 2 + B ^ 2) / 3)
		//Я ПОМЕНЯЛА ГРАДУСЫ ИБО 3 * cos 60° * sin 25° > 1 И ОШИБКА!!!!!!!
		/*int A = 60;
		int B = 25;
		double C = 3;
		int E = 5;
		long D = 180;
		double res;
		_asm
		{
			finit; очистка регистров FPU
			fild A
			fldpi; загрузка в стек пи
			fmul; перевод в градусы - деление на пи
			fidiv  D; перевод в градусы - умножение на 180
			fcos

			fild B
			fldpi; загрузка в стек пи
			fmul; перевод в градусы - деление на пи
			fidiv  D; перевод в градусы - умножение на 180
			fsin
			fmul
			fmul C
			fld  ST; копирование вершины стека
			fmul  ST, ST; возведение в квадрат
			fld1; загрузка 1 в стек FPU
			fsubr; вычитание с реверсом : 1 – z ^ 2
			fsqrt; корень квадратный
			fpatan; вычисление арктангенса
			fldpi; загрузка в стек пи
			fdiv; перевод в градусы - деление на пи
			fimul  D; перевод в градусы - умножение на 180
			fimul E
			fstp  res
		}
		std::cout << res;*/
		/*Вариант 2. Вычислить 6 значений функции
			Y = 7 * ln[x ^ 2 + x ^ (1 / 2)], x изменяется от 2 с шагом 3.*/

	double REZ[6];
	int A = 7;
	double B = 0.5;
	long D = 180;
	double X = 2;
	double C = 3;



	_asm
	{
		lea  EBX, REZ; загрузка адреса результатов в регистр EBX
		mov  ECX, 6; счетчик количества повторений цикла
		m1 :
		finit; очистка регистров FPU
		fldln2;
		fld X
		fmul X
		fld X
		fsqrt
		fadd
		fyl2x;
		fimul A; умножение на 7
		fstp qword ptr[EBX]; сохранение значения в массив
		fld X; загрузить в FPU X
		fadd C; инкриментирование
		fstp X; инкриментирование
		add  EBX, 8; увеличение адреса результатов
		loop m1
	}
	for (auto element : REZ) {
		std::cout << element << " ";

	}
}



//6	4	6	2
//Вариант 6. Вычислить 5 значений суммы элементов 
//последовательности an = 2, 5 * n ^ 2 + 5, 3 (для n от 4 с шагом 1).
//Результат разместить в памяти в целом формате.
